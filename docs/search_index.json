[["index.html", "An Incomplete Accounting of my Masters Thesis Research Thus Far Chapter 1 About", " An Incomplete Accounting of my Masters Thesis Research Thus Far Quinn Miller 2022-04-06 Chapter 1 About The western United States is seeing an increase in catastrophic wildfire in virtually all climate types and across a broad range of elevations. Many of these fires burn in forested headwaters that communities rely on for water supply, underscoring the need for a greater understanding of how fire changes streamflow timing and magnitude. Though many studies have examined the hydrologic response to fire, the site-specific nature of this type of research has made it difficult to generalize findings. The 2020 Cameron Peak fire in Colorado burned across a broad elevation gradient, making it an ideal case study for examining how the post-fire impact to streamflow generation varies with temperature, aridity, and seasonal snow cover. We selected three watershedsunburned, partially burned, and severely burnedin each of two snow zones: the high-elevation persistent snow zone, and the mid-elevation intermittent snow zone. These watersheds were instrumented to monitor snow accumulation and ablation, rainfall, and stream stage throughout water year 2021. We compared streamflow responses to rainfall and snowmelt between watersheds to evaluate how burning affected runoff. At high elevations, snowmelt runoff began earlier in the burned watersheds, which experienced greater total flow and lower base flows compared to the unburned watershed. The results were similar for the low elevation sites, though less pronounced for snowmelt runoff. At all elevations, streamflow at the burned sites was more responsive to rainfall, with the low elevation sites exhibiting a much more rapid rise to peak discharge than the high elevation sites. The results demonstrate that the streamflow responses to fire vary between snow zones, indicating a need to account for elevation and snow persistence in post-fire risk assessments. "],["methods.html", "Chapter 2 Methods 2.1 Site Description", " Chapter 2 Methods In each of our study watersheds we collected precipitation data using a tipping bucket rain gauge and continuous stream depth using either a capacitance rod or pressure transducer. We also measured stream discharge monthly from April to November 2021. When measuring discharge, we recorded stream stage manually in order to calibrate the sensor data (Fig. 2.1) Figure 2.1: Left: Blue Lake 4 (a tributary to Blue Lake) in June 2021. Right: Staff plate for manual stream stage measurement 2.1 Site Description For this class report, I will consider two of my field sites Blue Lake 4 and Michigan Ditch (Table 2.1). In chapter 4, I will compare our data collection at the Michigan Ditch tributary to the data collected at the nearby USGS Michigan River gage. Table 2.1: Properties of the watersheds in this study Watershed Slope Aspect Elevation (m) Area (sq.km) Snow Zone Burn Status Bighorn 19 SE 2987.988 3.396600 intermittent unburned Washout 33 E/SE 2455.392 2.695772 intermittent partially burned Dry 18 E/SE 2753.429 2.520000 intermittent severely burned Michigan Ditch 19 W/SW 3462.576 1.359900 persistent unburned Montgomery 8 E/SE 3070.066 1.887741 persistent partially burned Blue Lake 4 13 E/NE 3065.140 0.999655 persistent severely burned "],["data-processing.html", "Chapter 3 Data Processing 3.1 Precipitation 3.2 Stream Stage 3.3 Discharge", " Chapter 3 Data Processing The goal is to compare rainfall and discharge data in order to compute the following metrics: 1) total quantity of response flow, 2) magnitude of peak response discharge, 3) duration of response, 4) lag to peak time (start time of storm to time of peak discharge), and 5) runoff ratio (depth of Q (mm) divided by the depth of rainfall (mm) for the rain storm associated with the runoff response). 3.1 Precipitation Before starting this analysis, I identified discrete rainfall events from the tipping bucket rain gauge output using the USDA Rainfall Intensity Summarization Tool (RIST; (ARS 2013)). RIST calculated the following metrics for each event: storm duration (hrs), rain depth (mm); maximum intensity (mm h1) over 5-, 15-, 30-, and 60-min intervals; and erosivity. Because the stage data is recorded every 15 minutes, Im using the start time of the maximum intensity 15 minute interval as the storm start time. The function below formats the RIST output into the form I want. #function to read in rain files rain_reader &lt;- function(rain_file){ df &lt;-read.delim(rain_file, sep = &quot;&quot;, header = TRUE) %&gt;% select(-c(1,3:7)) } #function to process the storm output rain_format &lt;- function(rain_file){ df&lt;- rain_file %&gt;% select(Max_15_start_date, Max_15_start_time, Precip.in.) %&gt;% rename(date =1, time=2, p_in =3) %&gt;% mutate(datetime = paste(date, time, sep = &quot; &quot;)) %&gt;% filter(!(p_in ==0)) %&gt;% mutate(p_mm = p_in*25.4) %&gt;% mutate(DateTime = mdy_hms(datetime, tz = &quot;GMT&quot;)) } #read in and format michigan ditch and bl4 rain data mich_rain &lt;- rain_reader(&quot;raw_sitedata/michiganditch/michigan_storm.txt&quot;) bl4_rain &lt;- rain_reader(&quot;raw_sitedata/bl4/bl4_storm.csv&quot;) mich_storm &lt;- rain_format(mich_rain) bl4_storm &lt;- rain_format(bl4_rain) 3.2 Stream Stage Michigan Ditch Michigan Ditch stream stage was recorded by a pressure transducer that doesnt take into account atmospheric pressure, so the data needs to be corrected using barometic data. The continuous stage data is then calibrated according to the manual stage measurements. #read in pt data michiganditch_stage_pt=read_csv(&#39;raw_sitedata/michiganditch/michiganditch_stage_composite_pt.csv&#39;, show_col_types = FALSE) %&gt;% rename(Pw_kPa = 3) michiganditch_stage_pt$DateTime = as_datetime(michiganditch_stage_pt$datetime,tz=&quot;GMT&quot;, format=&quot;%m/%d/%Y %H:%M&quot;) #read in baro data michiganditch_baro=read_csv(&#39;raw_sitedata/michiganditch/michiganditch_baro_composite.csv&#39;, show_col_types = FALSE) %&gt;% filter(!is.na(Pressure_kPa)) %&gt;% rename(Pa_kPa = 2) michiganditch_baro$DateTime = as_datetime(michiganditch_baro$datetime,tz=&quot;GMT&quot;, format=&quot;%m/%d/%Y %H:%M&quot;) #join pt and baro and convert to stage in cm mich_stage = full_join(michiganditch_baro, michiganditch_stage_pt, by=&quot;DateTime&quot;,all=TRUE) %&gt;% mutate(stage_kPa = Pw_kPa - Pa_kPa) %&gt;% mutate(stage_cm = (stage_kPa*101.97162129779)/10) %&gt;% select(DateTime, stage_cm) #read in file with manual stage measurements discharge_michiganditch=read_csv(&#39;raw_sitedata/michiganditch/discharge_michiganditch.csv&#39;, show_col_types = FALSE) discharge_michiganditch$DateTime = as.POSIXct(discharge_michiganditch$datetime,tz=&quot;GMT&quot;,format=&quot;%m/%d/%Y %H&quot;) #merge the manual discharge measurements with the sensor time series michditch_stage=full_join(mich_stage,discharge_michiganditch,by=&#39;DateTime&#39;) %&gt;% select(1,2,7,9) #correct stage based on manual stage measurements michditch_stage&lt;-mutate(michditch_stage, stage_corr_cm = stage_cm) #offset adjust michditch_stage$stage_corr_cm=ifelse(michditch_stage$DateTime &gt;ymd_hms(&#39;2021-06-21 10:30:00&#39;), michditch_stage$stage_corr_cm-1,michditch_stage$stage_corr_cm) michditch_stage$stage_corr_cm=ifelse(michditch_stage$DateTime&gt;ymd_hms(&#39;2021-08-05 11:00:00&#39;), michditch_stage$stage_corr_cm-2.3,michditch_stage$stage_corr_cm) #delete sensor spikes michditch_stage &lt;- michditch_stage %&gt;% filter(!(DateTime &lt; ymd_hms(&quot;2021-01-10 09:30:00&quot;) | DateTime == ymd_hms(&quot;2021-06-21 09:45:00&quot;) | stage_corr_cm &lt;= 0)) #plot the sensor and manual stage time series michiganditch=ggplot()+ geom_line(data=michditch_stage,aes(x=DateTime,y=stage_corr_cm))+ geom_point(data=michditch_stage, aes(x=DateTime,y=manual_stage_cm),color=&#39;red&#39;)+ labs(x= &quot;Time&quot;, y= &quot;Stage (cm)&quot;) + theme_bw() ggplotly(michiganditch) Figure 3.1: Michigan Ditch stream stage. The red dots indicate manual stage measurements. Blue Lake 4 The Blue Lake data was collected with a capacitance rod, so doesnt need to be corrected for atmospheric pressure. #read in file with manual stage measurements discharge_bl4=read_csv(&#39;raw_sitedata/bl4/discharge_bl4.csv&#39;, show_col_types = FALSE) discharge_bl4$DateTime = as.POSIXct(discharge_bl4$datetime,tzone=&quot;US/Mountain&quot;,format=&quot;%m/%d/%Y %H&quot;) discharge_bl4[1:2,10] = as.POSIXct(&#39;2021-06-01 15:30:00&#39;) #read in sensor stage data and format bl4_stage=read_csv(&#39;raw_sitedata/bl4/bl4_stage_composite.csv&#39;, show_col_types = FALSE) bl4_stage$Date = as_date(bl4_stage$datetime, format=&quot;%m/%d/%Y %H:%M&quot;) bl4_stage$DateTime = round_date(as_datetime(bl4_stage$datetime, format=&quot;%m/%d/%Y %H:%M&quot;), unit = &quot;15 mins&quot;) bl4_stage$DateTime = force_tz(bl4_stage$DateTime, tzone = &quot;US/Mountain&quot; ) bl4_stage &lt;-rename(bl4_stage, Stage_mm = wtrhgt__3) bl4_stage &lt;- bl4_stage[, -c(2:3)] #convert stage from sensor units to cm bl4_stage$Stage_cm=bl4_stage$Stage_mm/10 #merge the manual discharge measurements with the sensor time series bl4_stage=full_join(bl4_stage,discharge_bl4,by=&#39;DateTime&#39;) #delete bad measurements-- sensor spikes and other obvious errors bl4_stage&lt;-filter(bl4_stage, datetime.x != &quot;8/6/2021 8:45&quot;) bl4_stage&lt;-filter(bl4_stage, datetime.x != &quot;6/1/2021 10:33&quot;) bl4_stage&lt;-filter(bl4_stage, datetime.x != &quot;6/1/2021 11:33&quot;) bl4_stage&lt;-filter(bl4_stage, datetime.x != &quot;6/1/2021 12:33&quot;) bl4_stage&lt;-filter(bl4_stage, datetime.x != &quot;6/1/2021 13:33&quot;) #goal is to offset-adjust sensor stage to levels of manual stage bl4_stage$Stage_corr_cm = bl4_stage$Stage_cm bl4_stage$Stage_corr_cm = ifelse(bl4_stage$DateTime &lt; &#39;2021-06-01 14:30:00&#39;, bl4_stage$Stage_corr_cm +6, bl4_stage$Stage_corr_cm+2) bl4_stage$Stage_corr_cm = ifelse(bl4_stage$DateTime &gt; &#39;2021-06-11 12:30:00&#39;, bl4_stage$Stage_corr_cm +4.4, bl4_stage$Stage_corr_cm) bl4_stage$Stage_corr_cm = ifelse(bl4_stage$DateTime &gt; &#39;2021-07-02 13:45:00&#39;, bl4_stage$Stage_corr_cm +0.2, bl4_stage$Stage_corr_cm) bl4_stage$Stage_corr_cm = ifelse(bl4_stage$DateTime &gt; &#39;2021-08-06 08:30:00&#39;, bl4_stage$Stage_corr_cm +0.5, bl4_stage$Stage_corr_cm) #plot the sensor and manual stage time series bl4=ggplot()+geom_line(data=bl4_stage,aes(x=DateTime,y=Stage_corr_cm))+ geom_point(data=bl4_stage,aes(x=DateTime,y=manual_stage_cm),color=&#39;red&#39;)+ labs(x= &quot;Time&quot;, y= &quot;Stage (cm)&quot;) + theme_bw() ggplotly(bl4) Figure 3.2: Bl4 stream stage. The red dots indicate manual stage measurements. 3.3 Discharge Rating curves were developed for both sites using JMP statistical software, and then used to calculate continuous discharge. #michigan ditch rc is a sqrt transform of the y axis michditch_stage$Discharge_Ls = (-0.218979 + 0.3533779*(michditch_stage$stage_corr_cm))^2 #plot sensor discharge and manual discharge to make sure rating curve was applied correctly michiganditch=ggplot(michditch_stage)+ geom_line(aes(x=DateTime,y=Discharge_Ls))+ geom_point(aes(x=DateTime,y=discharge_Ls),color=&#39;red&#39;)+ xlab(&quot;Time&quot;)+ ylab(&quot;Discharge (L/s)&quot;)+ theme_bw() #bl4 rc is a gompertz 3p sigmoid curve a=159.07732 b=0.0997502 c=23.905566 bl4_stage$Discharge_Ls = a*exp(-exp(-b*(bl4_stage$Stage_corr_cm - c))) #plot sensor discharge and manual discharge to make sure rating curve was applied correctly bl4=ggplot()+geom_line(data=bl4_stage,aes(x=DateTime,y=Discharge_Ls))+ geom_point(data=bl4_stage,aes(x=DateTime,y=discharge_Ls),color=&#39;red&#39;)+ xlab(&quot;Time&quot;)+ ylab(&quot;Discharge (L/s)&quot;)+ theme_bw() Figure 3.3: Plots of discharge; Michigan Ditch on the left and Blue Lake 4 on the right. The red dots indicate manual discharge measurements. References "],["comparison-of-salt-dilution-to-usgs-gage.html", "Chapter 4 Comparison of Salt Dilution to USGS Gage", " Chapter 4 Comparison of Salt Dilution to USGS Gage You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["footnotes-and-citations.html", "Chapter 5 Footnotes and citations 5.1 Footnotes 5.2 Citations", " Chapter 5 Footnotes and citations 5.1 Footnotes Footnotes are put inside the square brackets after a caret ^[]. Like this one.1 5.2 Citations Reference items in your bibliography file(s) using @key. For example, we are using the bookdown package (Xie 2022) (check out the last code chunk in index.Rmd to see how this citation key was added) in this sample book, which was built on top of R Markdown and knitr (Xie 2015) (this citation was added manually in an external file book.bib). Note that the .bib files need to be listed in the index.Rmd with the YAML bibliography key. The RStudio Visual Markdown Editor can also make it easier to insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations References "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
